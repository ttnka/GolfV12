
@using GolfV12.Shared
@inherits MisAzarBase 

<h3>Lista de tipos retos</h3>

<div class="form-grup row">        
        <div class="col-sm-9">
            <div class="nav-item px-3">
                <RadzenButton Icon="add_circle_outline" style="margin-bottom: 10px" 
                Text="Agregar ExtrasTipo" 
                Click="@InsertRow" Disabled=@(TiposAzarToInsert != null) />
            </div>
        </div>
        
        <div class="col-sm-3">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href=@($"/players/misdatos/")>
                <span class="oi oi-caret-left" aria-hidden="true"></span> Regresar a listado de tarjetas
                </NavLink>
            </div>
        </div>
    </div>
@if(LosTiposAzar != null)
{
    <RadzenDataGrid @ref=@TiposAzarGrid AllowFiltering="true" AllowPaging="true" PageSize="50" 
                AllowSorting="true" EditMode="DataGridEditMode.Single"
                Data=@LosTiposAzar TItem="G390TiposAzar" RowUpdate="@OnUpdateRow" 
                RowCreate="@OnCreateRow" >
        <Columns>

            <RadzenDataGridColumn TItem="G390TiposAzar" Property="Id" Title="Id" Width="60px" 
            Filterable="false" Sortable="false" Frozen="true">
                <Template Context="datos">
                    @if (@DatosDic.ContainsKey($"Renglon_{datos.Id}"))
                    {
                        @DatosDic[$"Renglon_{datos.Id}"];
                    } 
                    else
                    {
                        <label>0</label>
                    }
                    @if(!datos.Publico)
                    {
                        <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Class="m-1" 
                        Click="@(args => EditRow(datos))" @onclick:stopPropagation="true">
                    </RadzenButton>
                    }
                    
                </Template>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn TItem="G390TiposAzar" Title="Titulo" Property="Titulo" 
                Width="200px" Filterable="true" Frozen="true">
                <Template Context="datos">
                @datos.Titulo
                </Template>

                <EditTemplate Context="datos">
                    <RadzenTextBox Name="Titulo" @bind-Value=datos.Titulo ></RadzenTextBox> 
                </EditTemplate>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn TItem="G390TiposAzar" Title="Descripcion" Property="Desc" 
                Width="200px" Filterable="false" Frozen="true">
                <Template Context="datos">
                @datos.Desc
                </Template>

                <EditTemplate Context="datos">
                    <RadzenTextArea Name="Desc" @bind-Value=datos.Desc ></RadzenTextArea>
                </EditTemplate>

            </RadzenDataGridColumn>


            <RadzenDataGridColumn TItem="G390TiposAzar" Property="Individual" Title="Individual" 
            Filterable="false"  Width="100px">
                <Template Context="datos">
                    @if(datos.Indivual)
                    {
                        <b>Si</b>
                    }
                    else
                    {
                        <b>Equipo</b>
                    }
                </Template>
                <EditTemplate Context="datos">
                    Equipo <RadzenSwitch Name="Individual" @bind-Value="datos.Indivual"  /> Individual
                    
                </EditTemplate>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn TItem="G390TiposAzar" Property="Publico" Title="Publico" 
            Filterable="false"  Width="100px">
                <Template Context="datos">
                    @if(datos.Publico)
                    {
                        <b>Si!</b>
                    }
                    else
                    {
                        <b>Solo tuyo!</b>
                    }
                </Template>
                <EditTemplate Context="datos">
                    Privado <RadzenSwitch Name="Individual" @bind-Value="datos.Publico"  /> Publico
                    
                </EditTemplate>
            </RadzenDataGridColumn>

            
            <RadzenDataGridColumn TItem="G390TiposAzar" Context="sampleBlazorModelsSampleOrder" 
                    Filterable="false" Sortable="false" TextAlign="TextAlign.Center" 
                    Width="120px" Title="Estado">
                <Template Context="datos">
                    @if(datos.Status == true)
                    {
                        <b>Activo</b>
                    }
                    else
                    {
                        <b>Suspendido</b>
                    }
                </Template>

                <EditTemplate Context="datos">
                    <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Primary" Class="m-1" Click="@((args) => SaveRow(datos))">
                    </RadzenButton>
                    <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Light" Class="m-1" Click="@((args) => CancelEdit(datos))">
                    </RadzenButton>
                </EditTemplate>

            </RadzenDataGridColumn>

        </Columns>
   </RadzenDataGrid>  
}
else
{
    <div class="spinner"></div>
}
--Tatanka--



@code {
    G390TiposAzar TiposAzarToInsert;


    async Task EditRow(G390TiposAzar azarT)
    {
        await TiposAzarGrid.EditRow(azarT);
    }
    async void OnUpdateRow(G390TiposAzar azarT)
    {
        if (azarT == TiposAzarToInsert) TiposAzarToInsert = null;

        await TiposAzarIServ.UpdateTiposAzar(azarT);
    }
    async Task SaveRow(G390TiposAzar azarT)
    {
        //ext.Tarjeta = TarjetaId;

        await TiposAzarGrid.UpdateRow(azarT);
    }
    void CancelEdit(G390TiposAzar azarT)
    {
        if (azarT == TiposAzarToInsert) TiposAzarToInsert = null;
        TiposAzarGrid.CancelEditRow(azarT);
    }
    async Task InsertRow()
    {
        TiposAzarToInsert = new G390TiposAzar();
        TiposAzarToInsert.Id = Guid.NewGuid().ToString();
        TiposAzarToInsert.Creador = UserIdLog;
        //TiposAzarToInsert.Publico = false;
        TiposAzarToInsert.Estado = 1;
        TiposAzarToInsert.Status = true;
        
        await TiposAzarGrid.InsertRow(TiposAzarToInsert);
    }
    async void OnCreateRow(G390TiposAzar azarT)
    {
        if (azarT == TiposAzarToInsert) TiposAzarToInsert = null;
        
        G390TiposAzar resultado = new G390TiposAzar();
        resultado = await TiposAzarIServ.AddTiposAzar(azarT);
        await EscribirBitacoraUno(UserIdLog, BitaAcciones.Agregar, false,
            $"El usuario agrego un nuevo Extra {azarT.Titulo}");
            
    }

    public void ShowNotification(NotificationMessage message)
    {
        NS.Notify(message);
    }
    
        
 }